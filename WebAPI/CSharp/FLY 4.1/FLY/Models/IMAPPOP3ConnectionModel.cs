// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AvePoint.Migration.Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IMAPPOP3ConnectionModel
    {
        /// <summary>
        /// Initializes a new instance of the IMAPPOP3ConnectionModel class.
        /// </summary>
        public IMAPPOP3ConnectionModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IMAPPOP3ConnectionModel class.
        /// </summary>
        /// <param name="type">Possible values include: 'Gmail', 'Yahoo',
        /// 'Outlook', 'Others'</param>
        /// <param name="serverName">Gmail: 'imap.gmail.com',
        /// Yahoo: 'imap.mail.yahoo.com',
        /// Outlook: 'imap-mail.outlook.com',
        /// Others: 'imap.example.com' OR 'pop.example.com'</param>
        /// <param name="port">IMAP: 993(SSL),
        /// POP3: 955(SSL)</param>
        /// <param name="enableSSL">whether you want to enable SSL
        /// authentication</param>
        public IMAPPOP3ConnectionModel(string type, string serverName, int port, bool enableSSL)
        {
            Type = type;
            ServerName = serverName;
            Port = port;
            EnableSSL = enableSSL;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Gmail', 'Yahoo', 'Outlook',
        /// 'Others'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets gmail: 'imap.gmail.com',
        /// Yahoo: 'imap.mail.yahoo.com',
        /// Outlook: 'imap-mail.outlook.com',
        /// Others: 'imap.example.com' OR 'pop.example.com'
        /// </summary>
        [JsonProperty(PropertyName = "serverName")]
        public string ServerName { get; set; }

        /// <summary>
        /// Gets or sets IMAP: 993(SSL),
        /// POP3: 955(SSL)
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// Gets or sets whether you want to enable SSL authentication
        /// </summary>
        [JsonProperty(PropertyName = "enableSSL")]
        public bool EnableSSL { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (ServerName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServerName");
            }
        }
    }
}
