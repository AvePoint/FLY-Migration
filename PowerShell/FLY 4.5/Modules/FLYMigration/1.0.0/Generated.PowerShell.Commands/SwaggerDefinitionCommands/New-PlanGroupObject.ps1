<#
Code generated by Microsoft (R) PSSwagger 0.3.0
Changes may cause incorrect behavior and will be lost if the code is regenerated.
#>

<#
.SYNOPSIS
    

.DESCRIPTION
    

.PARAMETER Description
    Description of the plan group.

.PARAMETER Method
    Choose a group type to run the plans in the plan group. 
"Parallel" will run multiple plans simultaneously according to the specified concurrent plan count. 
"Sequential" will run the plans according to their order in the plan group.
Possible values include: ['Parallel', 'Sequential']

.PARAMETER Schedule
    The schedule of the plan groups.

.PARAMETER ParallelPlanCount
    Specify the number of the concurrent plans. 
Concurrent plan allows you to simultaneously run multiple plans in one plan group.

.PARAMETER Name
    Name of the plan group.

.PARAMETER Plans
    The list of the plan id.
The plans will be managed by this plan group, and the plan schedules will be disabled.

#>
function New-PlanGroupObject
{
    param(    
        [Parameter(Mandatory = $false)]
        [string]
        $Description,
    
        [Parameter(Mandatory = $true)]
        [ValidateSet('Parallel', 'Sequential')]
        [string]
        $Method,
    
        [Parameter(Mandatory = $false)]
        [AvePoint.PowerShell.FLYMigration.Models.ScheduleModel]
        $Schedule,
    
        [Parameter(Mandatory = $false)]
        [int32]
        $ParallelPlanCount,
    
        [Parameter(Mandatory = $true)]
        [string]
        $Name,
    
        [Parameter(Mandatory = $false)]
        [string[]]
        $Plans
    )
    
    $Object = New-Object -TypeName AvePoint.PowerShell.FLYMigration.Models.PlanGroupModel

    $PSBoundParameters.GetEnumerator() | ForEach-Object { 
        if(Get-Member -InputObject $Object -Name $_.Key -MemberType Property)
        {
            $Object.$($_.Key) = $_.Value
        }
    }

    if(Get-Member -InputObject $Object -Name Validate -MemberType Method)
    {
        $Object.Validate()
    }

    return $Object
}
