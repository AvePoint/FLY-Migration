// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AvePoint.PowerShell.FLYMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ExchangeOnPremisesConnectionOption
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ExchangeOnPremisesConnectionOption class.
        /// </summary>
        public ExchangeOnPremisesConnectionOption()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ExchangeOnPremisesConnectionOption class.
        /// </summary>
        /// <param name="basicCredential">The Exchange on-premises service
        /// account must have a mailbox and the following roles:
        /// ApplicationImpersonation,
        /// Exchange Servers,
        /// Mail Recipients,
        /// Mail Recipient Creation,
        /// Distribution Groups,
        /// Mailbox Search,
        /// Active Directory,
        /// To migrate source public folders,
        /// make sure a root folder with the same name exists in the
        /// destination and the service account has the Owner permission level
        /// to the root folder.</param>
        public ExchangeOnPremisesConnectionOption(BasicCredential basicCredential = default(BasicCredential), ExchangeServerOption exchangeServerOption = default(ExchangeServerOption), string connectionId = default(string))
        {
            BasicCredential = basicCredential;
            ExchangeServerOption = exchangeServerOption;
            ConnectionId = connectionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Exchange on-premises service account must have a
        /// mailbox and the following roles:
        /// ApplicationImpersonation,
        /// Exchange Servers,
        /// Mail Recipients,
        /// Mail Recipient Creation,
        /// Distribution Groups,
        /// Mailbox Search,
        /// Active Directory,
        /// To migrate source public folders,
        /// make sure a root folder with the same name exists in the
        /// destination and the service account has the Owner permission level
        /// to the root folder.
        /// </summary>
        [JsonProperty(PropertyName = "basicCredential")]
        public BasicCredential BasicCredential { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangeServerOption")]
        public ExchangeServerOption ExchangeServerOption { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connectionId")]
        public string ConnectionId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BasicCredential != null)
            {
                BasicCredential.Validate();
            }
            if (ExchangeServerOption != null)
            {
                ExchangeServerOption.Validate();
            }
        }
    }
}
