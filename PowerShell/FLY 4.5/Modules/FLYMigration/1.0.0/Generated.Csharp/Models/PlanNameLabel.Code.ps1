// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AvePoint.PowerShell.FLYMigration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PlanNameLabel
    {
        /// <summary>
        /// Initializes a new instance of the PlanNameLabel class.
        /// </summary>
        public PlanNameLabel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlanNameLabel class.
        /// </summary>
        /// <param name="name">the site or content included (e.g.
        /// Marketing)</param>
        /// <param name="businessUnit">the project, department, or company name
        /// (e.g. Contoso)</param>
        /// <param name="wave">a custom name or number (e.g. 01)</param>
        public PlanNameLabel(string name, string businessUnit = default(string), string wave = default(string))
        {
            BusinessUnit = businessUnit;
            Wave = wave;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the project, department, or company name (e.g.
        /// Contoso)
        /// </summary>
        [JsonProperty(PropertyName = "businessUnit")]
        public string BusinessUnit { get; set; }

        /// <summary>
        /// Gets or sets a custom name or number (e.g. 01)
        /// </summary>
        [JsonProperty(PropertyName = "wave")]
        public string Wave { get; set; }

        /// <summary>
        /// Gets or sets the site or content included (e.g. Marketing)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
