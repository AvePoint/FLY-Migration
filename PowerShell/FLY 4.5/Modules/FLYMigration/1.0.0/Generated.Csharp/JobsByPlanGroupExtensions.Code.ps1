// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AvePoint.PowerShell.FLYMigration
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for JobsByPlanGroup.
    /// </summary>
    public static partial class JobsByPlanGroupExtensions
    {
            /// <summary>
            /// Run migration jobs by plan group
            /// </summary>
            /// <remarks>
            /// Run migration jobs of a plan group by passing the ID of the plan group and
            /// settings
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// ID of the plan group
            /// </param>
            /// <param name='settings'>
            /// job mode
            /// </param>
            public static ServiceResponseStatusResultModel Start(this IJobsByPlanGroup operations, string id, PlanExecutionModel settings)
            {
                return operations.StartAsync(id, settings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Run migration jobs by plan group
            /// </summary>
            /// <remarks>
            /// Run migration jobs of a plan group by passing the ID of the plan group and
            /// settings
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// ID of the plan group
            /// </param>
            /// <param name='settings'>
            /// job mode
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResponseStatusResultModel> StartAsync(this IJobsByPlanGroup operations, string id, PlanExecutionModel settings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.StartWithHttpMessagesAsync(id, settings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
